body {
  margin: 0;
  font-family: -apple-system, "Helvetica Neue", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: rgb(255, 246, 220);
  color: rgb(0, 0, 0);
}

h1 {
  font-family: -apple-system, "Helvetica Neue", sans-serif;
}

h4 {
  font-family: -apple-system, Lora, Karla-Regular, BlinkMacSystemFont,
    "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
    sans-serif;
}

h5 {
  font-family: -apple-system, Lora, Karla-Regular, BlinkMacSystemFont,
    "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
    sans-serif;
}

p {
  font-family: -apple-system, Lora, Karla-Regular, BlinkMacSystemFont,
    "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
    sans-serif;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

ul {
  padding: 0;
}

li {
  list-style-type: none;
}

/* INDIVIDUAL COMPONENT STYLING */

.center-text {
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
}

.body-text {
  max-width: 80%;
}

.title {
  display: flex;
}

.title {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: left;
  margin: 15px;
}

.main-title {
  display: flex;
  justify-content: left;
  font-family: -apple-system, "helvetica", sans-serif;
  font-size: 9.57em;
  color: #be1600;
  line-height: 130px;
}

/* Individual sections */
.home-section {
  background-color: #e6dfd0;
  display: flex;
  /* justify-content: left; */
}

.section1 {
  background-color: #def8ec;

  /* background-image: url("https://www.publicdomainpictures.net/pictures/310000/velka/damask-vintage-background-wallpaper-1566400309WS6.jpg") ; */
}

.section0 {
  background-color: rgb(255, 246, 220);
}

.content-style {
  display: flex;
  flex-direction: column;
}

/* FLEXING */

.flex-center {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.flex-top {
  display: flex;
  flex-direction: column-reverse;
}

.flex-left {
  display: flex;
  justify-content: left;
  /* margin-left: 10px; */
}

.btn-clear {
  border: none;
  background: transparent;
}

.nav-link {
  font-size: 18px;
  font-weight: bold;
  text-decoration: none;
  color: inherit;
}

.image-scale {
  width: 100vw;
}

.direction {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.btm-cntr {
  display: none;
  justify-content: column-reverse;
  flex-direction: "co;lumn";
  justify-content: "flex-end";
  align-items: "center";
  padding-right: "6vw";
}

.scroll {
  display: "inline";
  padding: "5px";
}

.image-scale {
  width: 100vh;
}

/* IMAGE TOGGLE CLASSES */

.active {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  opacity: 100;
  transition: opacity 0.3s;
}

.inactive {
  /* background-color: red; */
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  opacity: 0;
  transition: opacity 0.3s;
}

.flex-child {
  position: relative;
}

@keyframes bounce {
  from {
    transform: translateY(20%);
  }

  to {
    transform: translateY(-10%);
  }
}

@media screen and (max-width: 850px) {
  .main-title {
    display: flex;
    justify-content: left;
    font-family: -apple-system, "Helvetica Neue", sans-serif;
    font-size: 12vw;
    color: #dc2c21;
    line-height: 0.95em;
    width: 80%;
  }

  .subtitle {
    font-size: 4vw;
    width: 50vw;
    margin-left: 5px;
  }

  .title {
    width: 80%;
  }

  .postcard {
    width: 70vw;
  }

  .image-scale {
    width: 70vw;
  }
  .body-text {
    font-size: 12px;
  }

  .fp-tableCell {
    display: flex;
    align-items: center;
  }
}

/*Animation Station*/

#down-arrows {
  animation-duration: 1s;
  animation-name: bounce;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  rotate: 50;
}

/* I sincerely apologize for the following code.
I hate it so much. I ran out of time and I had
to get something working. It is repetitive
and not very performant (though the transition
being on the opacity and not on the filter property
is a performance boost). What I would do with
more time is actually solve the propblem
programatically. Figure out a callback on the
fullbage move section down */

#grayscale0 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale1 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale2 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale3 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale4 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale5 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale6 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale7 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale8 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale9 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale10 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale11 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale12 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
  transition: opacity 0.5s;
}
#grayscale13 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
}
#grayscale14 {
  position: absolute;
  z-index: 2;
  filter: grayscale();
  opacity: 100%;
}
.fp-viewing-1 #grayscale0 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}

.fp-viewing-2 #grayscale1 {
  opacity: 0;
  transition: opacity 0.5s;
  transition-delay: 0.5s;
}
.fp-viewing-3 #grayscale2 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}

.fp-viewing-4 #grayscale3 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-5 #grayscale4 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}

.fp-viewing-6 #grayscale5 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-7 #grayscale6 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}

.fp-viewing-8 #grayscale7 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-9 #grayscale8 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-10 #grayscale9 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-11 #grayscale10 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-12 #grayscale11 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-13 #grayscale12 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
.fp-viewing-14 #grayscale13 {
  opacity: 0;
  transition: opacity 0.5s ease-in;
  transition-delay: 0.5s;
}
